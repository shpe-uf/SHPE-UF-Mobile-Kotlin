//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0-beta.5'.
//
package com.example.shpe_uf_mobile_kotlin.type.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.present
import com.example.shpe_uf_mobile_kotlin.type.EditUserProfileInput
import kotlin.IllegalStateException

public object EditUserProfileInput_InputAdapter : Adapter<EditUserProfileInput> {
  override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
      EditUserProfileInput = throw IllegalStateException("Input type used in output position")

  override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    `value`: EditUserProfileInput,
  ) {
    writer.name("email")
    StringAdapter.toJson(writer, customScalarAdapters, value.email)
    writer.name("firstName")
    StringAdapter.toJson(writer, customScalarAdapters, value.firstName)
    writer.name("lastName")
    StringAdapter.toJson(writer, customScalarAdapters, value.lastName)
    writer.name("photo")
    StringAdapter.toJson(writer, customScalarAdapters, value.photo)
    writer.name("major")
    StringAdapter.toJson(writer, customScalarAdapters, value.major)
    writer.name("year")
    StringAdapter.toJson(writer, customScalarAdapters, value.year)
    writer.name("graduating")
    StringAdapter.toJson(writer, customScalarAdapters, value.graduating)
    writer.name("country")
    StringAdapter.toJson(writer, customScalarAdapters, value.country)
    writer.name("ethnicity")
    StringAdapter.toJson(writer, customScalarAdapters, value.ethnicity)
    writer.name("sex")
    StringAdapter.toJson(writer, customScalarAdapters, value.sex)
    if (value.classes is Optional.Present) {
      writer.name("classes")
      NullableStringAdapter.list().nullable().present().toJson(writer, customScalarAdapters,
          value.classes)
    }
    if (value.internships is Optional.Present) {
      writer.name("internships")
      NullableStringAdapter.list().nullable().present().toJson(writer, customScalarAdapters,
          value.internships)
    }
    if (value.socialMedia is Optional.Present) {
      writer.name("socialMedia")
      NullableStringAdapter.list().nullable().present().toJson(writer, customScalarAdapters,
          value.socialMedia)
    }
  }
}
