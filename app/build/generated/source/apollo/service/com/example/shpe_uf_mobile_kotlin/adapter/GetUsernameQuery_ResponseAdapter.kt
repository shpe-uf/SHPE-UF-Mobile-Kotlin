//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0-beta.4'.
//
package com.example.shpe_uf_mobile_kotlin.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.missingField
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.shpe_uf_mobile_kotlin.GetUsernameQuery
import kotlin.String
import kotlin.collections.List

public object GetUsernameQuery_ResponseAdapter {
  public object Data : Adapter<GetUsernameQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("getUser")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetUsernameQuery.Data {
      var _getUser: GetUsernameQuery.GetUser? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _getUser = GetUser.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetUsernameQuery.Data(
        getUser = _getUser
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetUsernameQuery.Data,
    ) {
      writer.name("getUser")
      GetUser.obj().nullable().toJson(writer, customScalarAdapters, value.getUser)
    }
  }

  public object GetUser : Adapter<GetUsernameQuery.GetUser> {
    public val RESPONSE_NAMES: List<String> = listOf("username")

    override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetUsernameQuery.GetUser {
      var _username: String? = null

      while (true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _username = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetUsernameQuery.GetUser(
        username = _username ?: missingField(reader, "username")
      )
    }

    override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetUsernameQuery.GetUser,
    ) {
      writer.name("username")
      StringAdapter.toJson(writer, customScalarAdapters, value.username)
    }
  }
}
